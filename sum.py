from manim import *
import functools
# config.background_color = DARKER_GREY
# config["background_color"] = DARKER_GREY
Text = functools.partial(Text, font="Alsina")
config.tex_template = TexFontTemplates.comfortaa

class S1(Scene):
	def construct(self):
		q = Tex("sum of digits of $1+2+3+ \dotsb + 10^{10}$").scale(1).to_edge(DOWN)
		self.play(Write(q),run_time = 2)
		self.wait(2)
		h1 = Text("Approach").scale(2).to_edge(UP).set_color(BLUE_B)
		s1 = Text("We will try to know the pattren \nby solving same problem with less numbers").scale(1).next_to(h1,DOWN,buff=1).set_submobject_colors_by_gradient(RED_C,GREEN_C)
		self.play(Write(h1),Write(s1),run_time = 5)
		self.wait(5)
		self.play(q.animate.set_fill(opacity=0.5),FadeOut(h1),s1.animate(run_time = 2).shift(UP*2),run_time = 2)
		self.wait()
		s2 = Tex(
			"""
			Which means ;\n
			we will solve these first\n
			if you want to know\n
			this problem solution\n
			directly,skip the video
			"""
			).set_color(GOLD_A).next_to(s1,DOWN,buff=0.5)
		self.play(Create(s2),run_time = 2)
		self.wait(5)
		s3 = MathTex(r"1+2+3+ \dotsb + 10^1 \\ 1+2+3+ \dotsb + 10^2").to_edge(RIGHT).set_color(PURPLE_A)
		self.play(s1.animate.set_fill(opacity=0.5),Write(s3),s2.animate(run_time = 2).shift(LEFT*2),run_time = 5)
		self.wait(5)
		self.play(Create(SurroundingRectangle(s3)),run_time=2)
		self.wait()
class S2(Scene):
	def construct(self):
		q = MathTex(r"1+2+3+ \dotsb + 10^1").scale(2).to_edge(UL,buff=1)
		t1 = Tex("Sum of first $n$ natural numbers = ","$n \cdot \left({n+1 \over 2}\\right)$").next_to(q,DOWN,buff=1).set_color(RED_A).shift(RIGHT)
		self.play(Write(q),run_time = 2)
		self.wait()
		self.play(Create(t1),run_time = 2)
		self.wait()
		line = Line().next_to(q,RIGHT,buff=2).scale(50).rotate(PI/2).set_color(PINK)
		self.play(Create(line),FadeOut(t1[0]),t1[1].animate(run_time = 3).shift(RIGHT*3+UP*2.7),run_time = 5)
		self.wait(4)
		q2 = MathTex("\implies 10 \cdot \left(","{10+1","\over2}\\right)").next_to(q,DOWN,buff=1).set_color(YELLOW_C).scale(1.5).shift(LEFT*1.5)
		self.play(Write(q2),run_time= 2)
		self.wait()
		q3 = MathTex("\implies 10 \cdot \left(","{11","\over2}\\right)").move_to(q2).scale(1.5).set_color(YELLOW_C)
		self.play(ReplacementTransform(q2,q3),run_time = 3)
		self.wait(2)
		q4 = MathTex("=","\ 55").next_to(q3,RIGHT*2,buff=1).scale(1.5).set_color(YELLOW_C)
		b1 = Brace(q4[1],direction=DOWN,buff=0.2).set_color(TEAL_C)
		b1_tex = b1.get_tex("Sum \ of \  digits", "\ = \ ","10")
		self.play(Write(q4),FadeIn(b1),FadeIn(b1_tex),run_time = 3)
		self.wait(4)
		# Q = MathTex(r"1+2+3+ \dotsb + 10^2").scale(2).next_to(b1_tex,DOWN,buff=1).shift(LEFT*3)
		# self.play(Write(Q),run_time = 3)
		# self.wait(2)
		self.play(q.animate.shift(LEFT*0.5),FadeOut(q3),FadeOut(q4),FadeOut(b1),b1_tex[1::].animate.shift(UP*3.2).scale(2).set_color(BLUE_C),b1_tex[0].animate.to_edge(UP,buff=0.1).shift(RIGHT*2),run_time = 4)
		self.wait(3)
		Q = MathTex(r"1+2+3+ \dotsb + 10^2").scale(2).next_to(q,DOWN,buff=1)
		self.play(Write(Q),run_time = 2)
		self.wait(2)
		Q2 = MathTex("Sum \ = ","10^2","\cdot \left(","{10^2+1 \over 2}","\\right)").set_color(GREEN_C).scale(1.5).next_to(Q,DOWN,buff=1)
		self.play(Write(Q2),run_time = 3)
		self.wait(4)
		Q3 = MathTex("Sum = ","10\cdot10^1","\cdot \left(","{10^2+1 \over 2}","\\right)").set_color(GREEN_C).scale(1.5).next_to(Q,DOWN,buff=1)
		self.play(ReplacementTransform(Q2,Q3),run_time = 4)
		self.wait(3)
		Q4 = MathTex("Sum = ","5\cdot10^1","\cdot \left(","{10^2+1}","\\right)").set_color(GREEN_C).scale(1.5).next_to(Q,DOWN,buff=1)
		self.play(ReplacementTransform(Q3,Q4),run_time = 4)
		self.wait(3)
		Q5 = MathTex("=","\ 505").next_to(Q4,RIGHT,buff=1).scale(1.5).set_color(YELLOW_C)
		b2 = Brace(Q5[1],direction=DOWN,buff=0.2).set_color(TEAL_C)
		b2_tex = b2.get_tex("Sum \ of \  digits", "\ = \ ","10")
		self.play(Write(Q5),FadeIn(b2),FadeIn(b2_tex),run_time = 3)
		self.wait(3)
		self.play(b2_tex[1::].animate.shift(UP*3.3+LEFT*1.8).scale(2).set_color(BLUE_C),FadeOut(b2),FadeOut(Q5),FadeOut(Q4),FadeOut(b2_tex[0]),run_time = 4)
		self.wait(3)
		text2 = Text("Lets solve the original \nprblem with Same Stratergy").set_color_by_gradient(RED_C,BLUE_C,GREEN_C).to_edge(DOWN,buff=1).scale(1.5)
		self.play(Create(text2),run_time=3)
		self.wait(2)
class S3(Scene):
	def construct(self):
		fq = MathTex("1+2+3+ \dotsb + 10^{10}").scale(2).to_edge(UP).set_color(PURPLE_C)
		self.play(Write(fq),run_time = 2 )
		self.wait(2)
		q2 = MathTex("Sum \  = \  ","10^{10}"," \cdot \left({10^{ 10 }+ 1 \over2} \\right)").next_to(fq,DOWN,buff=2).scale(2)
		self.play(Write(q2),run_time = 2 )
		self.wait(2)
		q3 = MathTex("Sum \  = \  ","10\cdot 10^{9}"," \cdot \left({10^{ 10 }+ 1\over2} \\right)").next_to(fq,DOWN,buff=2).scale(1.5)
		self.play(ReplacementTransform(q2,q3),run_time = 4)
		self.wait(3)
		q4 = MathTex("Sum \  = \  ","5\cdot 10^{9}"," \cdot \left({10^{ 10 }+ 1} \\right)").next_to(fq,DOWN,buff=2).scale(1.5)
		self.play(ReplacementTransform(q3,q4),run_time = 4)
		self.wait(3)
		q5 = MathTex("\implies ","5","00 \dotsb 00","(10^{ 10 }+ 1)").set_color(BLUE_C).next_to(q4,DOWN,buff=1).scale(1.5)
		b1 = Brace(q5[2],direction=DOWN,buff=0.1).set_color(YELLOW_C)
		b1_tex = b1.get_tex("number \ of \  0s = 9").set_color(RED_D).scale(0.75)
		self.play(FadeIn(b1),FadeIn(b1_tex),Write(q5),run_time = 5)
		self.wait(3)
		q6 = MathTex("\implies ","5","00 \dotsb 00","(100\dotsb001)").set_color(BLUE_C).next_to(q4,DOWN,buff=1).scale(1.5).shift(RIGHT*0.5)
		self.play(ReplacementTransform(q5,q6),run_time = 4)
		self.wait(3)
		b2 = Brace(q6[3],direction=DOWN,buff=0.05).set_color(YELLOW_C)
		b2_tex = b2.get_tex("number \ of \  0s = 9").set_color(GOLD_C).scale(0.75)
		self.play(FadeIn(b2),FadeIn(b2_tex),run_time=4)
		self.wait(3) 
		self.play(q6.animate.shift(LEFT*1.5),b1.animate.shift(LEFT*1.5),b1_tex.animate.shift(LEFT*1.5),b2.animate.shift(LEFT*1.5),b2_tex.animate.shift(LEFT*1.5),run_time=2.5)
		self.wait()
		self.play(q6[:2].animate.shift(RIGHT*2.5),q6[2].animate.shift(RIGHT*6.7),b1.animate.shift(RIGHT*6.7),b1_tex.animate.shift(RIGHT*6.7),run_time = 2.5)
		self.wait(2.5)
		q7 = MathTex("(500 \dotsb 005)").move_to(q6[1]).set_color(BLUE_C).scale(1.5).shift(RIGHT*2.35+DOWN*0.1)
		self.play(ReplacementTransform(q6[1::2],q7),run_time=3)
		self.wait(2)
		b3 = Brace(q7,direction=LEFT,buff=0.1).set_color(YELLOW_D)
		b3_tex = b3.get_text("Sum of digits = 10").set_color_by_gradient(RED_A,BLUE_B,GREEN_C)
		self.play(FadeOut(q6[0]),FadeIn(b3),Write(b3_tex),run_time = 3)
		self.wait(2)
		f1 = SurroundingRectangle(b3_tex,buff=0.1)
		self.play(FadeOut(fq),Create(f1),run_time=2)
		self.wait(3)
class thumbnail(Scene):
	def construct(self):
		q = Text("Sum of digits of :-").to_edge(UP,buff=1).scale(2.5)
		q2 = MathTex("1+2+3 \dotsb +10^{ 10 }").scale(3.5).set_color(YELLOW_C)
		f = SurroundingRectangle(q2).set_color(BLUE_C)
		q3 = MathTex("= \ ?").next_to(q2,DOWN,buff=1).scale(3).set_color(RED_D)
		self.add(q,q2,f,q3)